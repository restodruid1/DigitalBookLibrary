<div id="body">
    <div class="dropdown">
    <button class="dropdown-btn" id="randomColorBtn" onclick="toggleDropdown()">{{user}}</button>
    <div id="dropdownContent" class="dropdown-content">
        <button class="logout-btn" onclick="logout()">Logout</button>
    </div>
    </div>

    <h1>USER NOTES</h1> 
    <button onclick="history.back()">Back</button>

    <ol id="itemList">
    {{#each data1}}    
        <li>
            <span class="note-text" id="{{@index}}">{{this}}</span>
            <div class="buttons">
                <button onclick="editItem(this)">Edit</button>
                <button onclick="deleteItem(this)">Delete</button>
            </div>
        </li>
    {{/each}}
    </ol>
    <button id="add-note">Add Note</button>

    <form id="text-form" onsubmit="return false" style="display: none;">
        <label for="myTextarea">Enter your text:</label><br>
        <textarea id="textArea" name="myTextarea" rows="6" cols="50"></textarea><br><br>
        <button id="submit" type="button" onclick="handle('submit')">Submit</button>
        <button type="button" onclick="handle('back')">Back</button>
    </form>

</div>

<script>
    async function logout() {
        await fetch('/logout', {
                method: 'POST',
                credentials: 'include'
            })
            .then(() => {
                alert("logged out");
                window.location.href = '/';
            })
            .catch(error => console.error("Error: ", error));
    }
    
    function toggleDropdown() {
        document.getElementById("dropdownContent").classList.toggle("show");
    }

    window.onload = function() {
        const btn = document.getElementById("randomColorBtn");
        const randomColor = "#" + Math.floor(Math.random()*16777215).toString(16);
        btn.style.backgroundColor = randomColor;
    };
</script>

<script>
  async function deleteItem(button) {
    const li = button.closest("li");
    //console.log(li.firstElementChild);
    const noteEleId = li.firstElementChild.id;
    //console.log(noteEleId);
    await fetch("http://localhost:3000/api/booksAPI/deleteNote", {
        method: "DELETE",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({noteId: noteEleId, bookId: {{id}} })
    })
    .then(res => res.json())
    .then(data => location.reload())//{console.log(data),location.reload()})
    .catch(error => console.error("Error: ", error));
  }

  async function editItem(button) {
    const li = button.closest("li");
    const span = li.querySelector(".note-text");
    const noteEleId = li.firstElementChild.id;
    const currentText = span.textContent;
    const input = document.createElement("input");
    input.type = "text";
    input.className = "edit-input";
    input.value = currentText;

    const saveButton = document.createElement("button");
    saveButton.textContent = "Save";
    saveButton.onclick = async () => {
      span.textContent = input.value;
      var response = await fetch("http://localhost:3000/api/booksAPI/updateNote", {
        method: "PUT",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({noteId: noteEleId, bookId: {{id}}, updatedNote: input.value})
    });
    if (response.ok) {
        
        alert("Update Successful");
        //li.replaceChild(span, input);
    } else {
        alert("Update Failed");
    }
      
    saveButton.remove();
    button.style.display = "inline";
    
    location.reload()
    };
    

    li.replaceChild(input, span);
    li.querySelector(".buttons").appendChild(saveButton);
    button.style.display = "none";
  }
</script>

<script>
    async function handle(action) {
            addNote = document.getElementById("text-form");
            submitNote = document.getElementById("submit");
            textData = document.getElementById("textArea").value;
            if (action === 'submit') {
                console.log("submit");
                if (textData.trim() === "") {
                    alert("Please enter something");
                    return;
                }
                //console.log("ADD NOTE CLICKED");
                var response = await fetch("http://localhost:3000/api/booksAPI/addNote", {
                    method: "POST",
                    headers: {"Content-Type": "application/json"},
                    body: JSON.stringify({data: textData, id: {{ id }} })
                })
                .then(res => res.json())
                .then(data => data);//console.log(data));
                
                location.reload();
                addNote.reset();
                
            } else if (action === 'back') {
                //console.log("back");
                addNote.style.display = "none";
                document.getElementById("add-note").style.display = "flex";
                addNote.reset();
            }              
        } 
</script> 

<script>
    noteButton = document.getElementById("add-note"); 
    noteButton.addEventListener("click", async (event) => {
        var textForm = document.getElementById("text-form");
        textForm.style.display = textForm.style.display === "none"  ? "flex" : "none";
        noteButton.style.display = "none";
    });
</script>